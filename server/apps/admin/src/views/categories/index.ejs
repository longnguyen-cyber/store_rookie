<div class="py-5 px-10">
  <div class="flex justify-between items-center mb-5">

    <div>
      <form id="searchForm">
        <input type="text" id="title"
          class="bg-gray-50 border  text-black text-lg rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 border-gray-600"
          placeholder="Category name" required name="title" oninput="debouncedSearch(event)" />
      </form>
    </div>
    <button type='submit' id='submit'
      class='text-white bg-blue-600 hover:bg-blue-700 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg px-5 py-2.5 text-center'>
      <a href="create/categories" class="px-4">
        Add new book
      </a>
    </button>

  </div>

  <table class="text-2xl w-full text-left rtl:text-right">
    <thead class="text-xl text-gray-700 uppercase bg-gray-50">
      <tr>
        <th class="border border-slate-700 pl-4">STT</th>
        <th class="border border-slate-700 pl-4">Name</th>
        <th class="border border-slate-700 pl-4">Action</th>
      </tr>
    </thead>
    <tbody>
      <% data.forEach(function(item, index) { %>
        <tr class="<%= index % 2 === 0 ? ' border-b' : 'bg-gray-200 border-b' %>">
          <td class="border border-slate-700 pl-4">
            <%= index + 1 %>
          </td>
          <td class="border border-slate-700 pl-4">
            <%= item.name %>
          </td>
          <td class="border border-slate-700 pl-4">
            <a href="edit/categories/<%= item.id %>" class="text-blue-500 hover:text-blue-800">Edit</a>
            <form action="delete/categories/<%= item.id %>" method="POST" class="inline">
              <input type="hidden" name="_method" value="DELETE">
              <button type="submit" class="text-red-500 hover:text-red-800">Delete</button>
            </form>
          </td>
        </tr>
        <% }); %>
    </tbody>
  </table>
  <br>
  <div class="">
    <a href="<%= pagination.prevPage %>" class="px-4">
      <i class="fa-solid fa-angle-left"></i>
    </a>
    <% pagination.pages.forEach(function(page) { %>
      <a href="/<%= entityName %>?page=<%= page %>&limit=10"
        class="<%= (page === pagination.currentPage) ? 'bg-red-500 text-white' : '' %> border rounded p-2 mr-2">
        <%= page %>
      </a>
      <% }); %>
        <a href="<%= pagination.nextPage %>" class="px-4">
          <i class="fa-solid fa-angle-right"></i>
        </a>
  </div>
</div>
<script>
  let debounceTimeout;

  function debouncedSearch(event) {
    clearTimeout(debounceTimeout);
    debounceTimeout = setTimeout(() => {
      const title = event.target.value;
      fetch(`/search/categories?q=${title}`, {
        method: 'GET',
      })
        .then(response => response.json())
        .then(data => {
          const dataSearch = data.dataSearch
          const table = document.querySelector('table tbody');

          // Remove all existing rows
          while (table.firstChild) {
            table.removeChild(table.firstChild);
          }
          dataSearch.forEach(element => {
            const tr = document.createElement('tr');
            tr.innerHTML = `
              <td class="border border-slate-700 ">
                ${element.id}
              </td>
              <td class="border border-slate-700  pl-4 text-left">
                ${element.name}
              </td>
              <td class="border border-slate-700 pl-4">
                <a href="edit/categories/${element.id}" class="text-blue-500 hover:text-blue-800">Edit</a>
                <form action="delete/categories/${element.id}" method="POST" class="inline">
                  <input type="hidden" name="_method" value="DELETE">
                  <button type="submit" class="text-red-500 hover:text-red-800">Delete</button>
                </form>
              </td>
            `;
            table.appendChild(tr);
          });
          // Update pagination
          const pagination = data.pagination;
          document.querySelector('#pagination a:first-child').href = pagination.prevPage;
          document.querySelector('#pagination a:last-child').href = pagination.nextPage;

          // Get the pagination container
          const paginationContainer = document.querySelector('#pagination');

          // Remove existing page links
          const existingPageLinks = document.querySelectorAll('#pagination a:not(:first-child):not(:last-child)');
          existingPageLinks.forEach(link => link.remove());

          // Add new page links
          pagination.pages.forEach((page, index) => {
            const link = document.createElement('a');
            link.href = `/${data.entityName}?page=${page}&limit=10`;
            link.textContent = page;
            link.className = page === pagination.currentPage ? 'bg-red-500 text-white border rounded p-2 mr-2' : 'border rounded p-2 mr-2';

            // Insert the new page link before the next page link
            paginationContainer.insertBefore(link, document.querySelector('#pagination a:last-child'));
          });
        }).catch(error => {
          console.error('Error:', error);
        });
    }, 3000); // delay in milliseconds
  }
  debouncedSearch();
</script>